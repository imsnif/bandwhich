name: ci

env:
  CARGO_TERM_COLOR: always

on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test:
    name: test
    env:
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
          - stable
          - macos
          - win-msvc
        include:
          - build: stable
            # see https://github.com/actions/runner-images#available-images
            os: ubuntu-22.04
            rust: stable
          - build: macos
            os: macos-12
            rust: stable
          - build: win-msvc
            os: windows-2022
            rust: stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build --verbose

      # This is useful for debugging problems when the expected build artifacts
      # (like shell completions and man pages) aren't generated.
      - name: Show build.rs stderr
        if: matrix.os == 'windows-2022'
        shell: bash
        run: |
          set +x
          stderr="$(find "./target/debug" -name stderr -print0 | xargs -0 ls -t | head -n1)"
          if [ -s "$stderr" ]; then
            echo "===== $stderr ===== "
            cat "$stderr"
            echo "====="
          fi
          set -x

      - name: Run tests
        run: cargo test --verbose

      - name: Upload unix binary
        if: matrix.os != 'windows-2022'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.rust }}
          path: target/debug/bandwhich

      - name: Upload windows binary
        if: matrix.os == 'windows-2022'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.rust }}
          path: |
            target/debug/bandwhich.exe
            target/debug/bandwhich.pdb
